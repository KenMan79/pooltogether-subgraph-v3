// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BalanceDripAdded extends ethereum.Event {
  get params(): BalanceDripAdded__Params {
    return new BalanceDripAdded__Params(this);
  }
}

export class BalanceDripAdded__Params {
  _event: BalanceDripAdded;

  constructor(event: BalanceDripAdded) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get dripRatePerSecond(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BalanceDripClaimed extends ethereum.Event {
  get params(): BalanceDripClaimed__Params {
    return new BalanceDripClaimed__Params(this);
  }
}

export class BalanceDripClaimed__Params {
  _event: BalanceDripClaimed;

  constructor(event: BalanceDripClaimed) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BalanceDripRateSet extends ethereum.Event {
  get params(): BalanceDripRateSet__Params {
    return new BalanceDripRateSet__Params(this);
  }
}

export class BalanceDripRateSet__Params {
  _event: BalanceDripRateSet;

  constructor(event: BalanceDripRateSet) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get dripRatePerSecond(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BalanceDripRemoved extends ethereum.Event {
  get params(): BalanceDripRemoved__Params {
    return new BalanceDripRemoved__Params(this);
  }
}

export class BalanceDripRemoved__Params {
  _event: BalanceDripRemoved;

  constructor(event: BalanceDripRemoved) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReferralVolumeDripAdded extends ethereum.Event {
  get params(): ReferralVolumeDripAdded__Params {
    return new ReferralVolumeDripAdded__Params(this);
  }
}

export class ReferralVolumeDripAdded__Params {
  _event: ReferralVolumeDripAdded;

  constructor(event: ReferralVolumeDripAdded) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get periodSeconds(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ReferralVolumeDripAmountSet extends ethereum.Event {
  get params(): ReferralVolumeDripAmountSet__Params {
    return new ReferralVolumeDripAmountSet__Params(this);
  }
}

export class ReferralVolumeDripAmountSet__Params {
  _event: ReferralVolumeDripAmountSet;

  constructor(event: ReferralVolumeDripAmountSet) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReferralVolumeDripClaimed extends ethereum.Event {
  get params(): ReferralVolumeDripClaimed__Params {
    return new ReferralVolumeDripClaimed__Params(this);
  }
}

export class ReferralVolumeDripClaimed__Params {
  _event: ReferralVolumeDripClaimed;

  constructor(event: ReferralVolumeDripClaimed) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ReferralVolumeDripRemoved extends ethereum.Event {
  get params(): ReferralVolumeDripRemoved__Params {
    return new ReferralVolumeDripRemoved__Params(this);
  }
}

export class ReferralVolumeDripRemoved__Params {
  _event: ReferralVolumeDripRemoved;

  constructor(event: ReferralVolumeDripRemoved) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReserveRateMantissaSet extends ethereum.Event {
  get params(): ReserveRateMantissaSet__Params {
    return new ReserveRateMantissaSet__Params(this);
  }
}

export class ReserveRateMantissaSet__Params {
  _event: ReserveRateMantissaSet;

  constructor(event: ReserveRateMantissaSet) {
    this._event = event;
  }

  get reserveRateMantissa(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class VolumeDripAdded extends ethereum.Event {
  get params(): VolumeDripAdded__Params {
    return new VolumeDripAdded__Params(this);
  }
}

export class VolumeDripAdded__Params {
  _event: VolumeDripAdded;

  constructor(event: VolumeDripAdded) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get periodSeconds(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class VolumeDripAmountSet extends ethereum.Event {
  get params(): VolumeDripAmountSet__Params {
    return new VolumeDripAmountSet__Params(this);
  }
}

export class VolumeDripAmountSet__Params {
  _event: VolumeDripAmountSet;

  constructor(event: VolumeDripAmountSet) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class VolumeDripClaimed extends ethereum.Event {
  get params(): VolumeDripClaimed__Params {
    return new VolumeDripClaimed__Params(this);
  }
}

export class VolumeDripClaimed__Params {
  _event: VolumeDripClaimed;

  constructor(event: VolumeDripClaimed) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get dripToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class VolumeDripRemoved extends ethereum.Event {
  get params(): VolumeDripRemoved__Params {
    return new VolumeDripRemoved__Params(this);
  }
}

export class VolumeDripRemoved__Params {
  _event: VolumeDripRemoved;

  constructor(event: VolumeDripRemoved) {
    this._event = event;
  }

  get prizeStrategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get measure(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Comptroller__getBalanceDripResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Comptroller__getReferralVolumeDripResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Comptroller__getVolumeDripResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Comptroller extends ethereum.SmartContract {
  static bind(address: Address): Comptroller {
    return new Comptroller("Comptroller", address);
  }

  balanceOfBalanceDrip(
    prizeStrategy: Address,
    measure: Address,
    dripToken: Address,
    user: Address
  ): BigInt {
    let result = super.call(
      "balanceOfBalanceDrip",
      "balanceOfBalanceDrip(address,address,address,address):(uint256)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(measure),
        ethereum.Value.fromAddress(dripToken),
        ethereum.Value.fromAddress(user)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOfBalanceDrip(
    prizeStrategy: Address,
    measure: Address,
    dripToken: Address,
    user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfBalanceDrip",
      "balanceOfBalanceDrip(address,address,address,address):(uint256)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(measure),
        ethereum.Value.fromAddress(dripToken),
        ethereum.Value.fromAddress(user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfReferralVolumeDrip(
    prizeStrategy: Address,
    user: Address,
    index: BigInt
  ): BigInt {
    let result = super.call(
      "balanceOfReferralVolumeDrip",
      "balanceOfReferralVolumeDrip(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOfReferralVolumeDrip(
    prizeStrategy: Address,
    user: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfReferralVolumeDrip",
      "balanceOfReferralVolumeDrip(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfVolumeDrip(
    prizeStrategy: Address,
    user: Address,
    index: BigInt
  ): BigInt {
    let result = super.call(
      "balanceOfVolumeDrip",
      "balanceOfVolumeDrip(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOfVolumeDrip(
    prizeStrategy: Address,
    user: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOfVolumeDrip",
      "balanceOfVolumeDrip(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBalanceDrip(
    prizeStrategy: Address,
    measure: Address,
    dripToken: Address
  ): Comptroller__getBalanceDripResult {
    let result = super.call(
      "getBalanceDrip",
      "getBalanceDrip(address,address,address):(uint256,uint128,uint32)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(measure),
        ethereum.Value.fromAddress(dripToken)
      ]
    );

    return new Comptroller__getBalanceDripResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getBalanceDrip(
    prizeStrategy: Address,
    measure: Address,
    dripToken: Address
  ): ethereum.CallResult<Comptroller__getBalanceDripResult> {
    let result = super.tryCall(
      "getBalanceDrip",
      "getBalanceDrip(address,address,address):(uint256,uint128,uint32)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromAddress(measure),
        ethereum.Value.fromAddress(dripToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Comptroller__getBalanceDripResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getReferralVolumeDrip(
    prizeStrategy: Address,
    index: BigInt
  ): Comptroller__getReferralVolumeDripResult {
    let result = super.call(
      "getReferralVolumeDrip",
      "getReferralVolumeDrip(address,uint256):(uint32,uint128,uint32)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return new Comptroller__getReferralVolumeDripResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getReferralVolumeDrip(
    prizeStrategy: Address,
    index: BigInt
  ): ethereum.CallResult<Comptroller__getReferralVolumeDripResult> {
    let result = super.tryCall(
      "getReferralVolumeDrip",
      "getReferralVolumeDrip(address,uint256):(uint32,uint128,uint32)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Comptroller__getReferralVolumeDripResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getVolumeDrip(
    prizeStrategy: Address,
    index: BigInt
  ): Comptroller__getVolumeDripResult {
    let result = super.call(
      "getVolumeDrip",
      "getVolumeDrip(address,uint256):(uint32,uint128,uint32)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return new Comptroller__getVolumeDripResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getVolumeDrip(
    prizeStrategy: Address,
    index: BigInt
  ): ethereum.CallResult<Comptroller__getVolumeDripResult> {
    let result = super.tryCall(
      "getVolumeDrip",
      "getVolumeDrip(address,uint256):(uint32,uint128,uint32)",
      [
        ethereum.Value.fromAddress(prizeStrategy),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Comptroller__getVolumeDripResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reserveRateMantissa(): BigInt {
    let result = super.call(
      "reserveRateMantissa",
      "reserveRateMantissa():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_reserveRateMantissa(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reserveRateMantissa",
      "reserveRateMantissa():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  setReserveRateMantissa(__reserveRateMantissa: BigInt): BigInt {
    let result = super.call(
      "setReserveRateMantissa",
      "setReserveRateMantissa(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(__reserveRateMantissa)]
    );

    return result[0].toBigInt();
  }

  try_setReserveRateMantissa(
    __reserveRateMantissa: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "setReserveRateMantissa",
      "setReserveRateMantissa(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(__reserveRateMantissa)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddBalanceDripCall extends ethereum.Call {
  get inputs(): AddBalanceDripCall__Inputs {
    return new AddBalanceDripCall__Inputs(this);
  }

  get outputs(): AddBalanceDripCall__Outputs {
    return new AddBalanceDripCall__Outputs(this);
  }
}

export class AddBalanceDripCall__Inputs {
  _call: AddBalanceDripCall;

  constructor(call: AddBalanceDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get dripRatePerSecond(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddBalanceDripCall__Outputs {
  _call: AddBalanceDripCall;

  constructor(call: AddBalanceDripCall) {
    this._call = call;
  }
}

export class AddReferralVolumeDripCall extends ethereum.Call {
  get inputs(): AddReferralVolumeDripCall__Inputs {
    return new AddReferralVolumeDripCall__Inputs(this);
  }

  get outputs(): AddReferralVolumeDripCall__Outputs {
    return new AddReferralVolumeDripCall__Outputs(this);
  }
}

export class AddReferralVolumeDripCall__Inputs {
  _call: AddReferralVolumeDripCall;

  constructor(call: AddReferralVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get periodSeconds(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class AddReferralVolumeDripCall__Outputs {
  _call: AddReferralVolumeDripCall;

  constructor(call: AddReferralVolumeDripCall) {
    this._call = call;
  }
}

export class AddVolumeDripCall extends ethereum.Call {
  get inputs(): AddVolumeDripCall__Inputs {
    return new AddVolumeDripCall__Inputs(this);
  }

  get outputs(): AddVolumeDripCall__Outputs {
    return new AddVolumeDripCall__Outputs(this);
  }
}

export class AddVolumeDripCall__Inputs {
  _call: AddVolumeDripCall;

  constructor(call: AddVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get periodSeconds(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class AddVolumeDripCall__Outputs {
  _call: AddVolumeDripCall;

  constructor(call: AddVolumeDripCall) {
    this._call = call;
  }
}

export class AfterDepositToCall extends ethereum.Call {
  get inputs(): AfterDepositToCall__Inputs {
    return new AfterDepositToCall__Inputs(this);
  }

  get outputs(): AfterDepositToCall__Outputs {
    return new AfterDepositToCall__Outputs(this);
  }
}

export class AfterDepositToCall__Inputs {
  _call: AfterDepositToCall;

  constructor(call: AfterDepositToCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get balance(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalSupply(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get controlledToken(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get referrer(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class AfterDepositToCall__Outputs {
  _call: AfterDepositToCall;

  constructor(call: AfterDepositToCall) {
    this._call = call;
  }
}

export class AfterWithdrawFromCall extends ethereum.Call {
  get inputs(): AfterWithdrawFromCall__Inputs {
    return new AfterWithdrawFromCall__Inputs(this);
  }

  get outputs(): AfterWithdrawFromCall__Outputs {
    return new AfterWithdrawFromCall__Outputs(this);
  }
}

export class AfterWithdrawFromCall__Inputs {
  _call: AfterWithdrawFromCall;

  constructor(call: AfterWithdrawFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get balance(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalSupply(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get controlledToken(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class AfterWithdrawFromCall__Outputs {
  _call: AfterWithdrawFromCall;

  constructor(call: AfterWithdrawFromCall) {
    this._call = call;
  }
}

export class BalanceOfBalanceDripCall extends ethereum.Call {
  get inputs(): BalanceOfBalanceDripCall__Inputs {
    return new BalanceOfBalanceDripCall__Inputs(this);
  }

  get outputs(): BalanceOfBalanceDripCall__Outputs {
    return new BalanceOfBalanceDripCall__Outputs(this);
  }
}

export class BalanceOfBalanceDripCall__Inputs {
  _call: BalanceOfBalanceDripCall;

  constructor(call: BalanceOfBalanceDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class BalanceOfBalanceDripCall__Outputs {
  _call: BalanceOfBalanceDripCall;

  constructor(call: BalanceOfBalanceDripCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BalanceOfReferralVolumeDripCall extends ethereum.Call {
  get inputs(): BalanceOfReferralVolumeDripCall__Inputs {
    return new BalanceOfReferralVolumeDripCall__Inputs(this);
  }

  get outputs(): BalanceOfReferralVolumeDripCall__Outputs {
    return new BalanceOfReferralVolumeDripCall__Outputs(this);
  }
}

export class BalanceOfReferralVolumeDripCall__Inputs {
  _call: BalanceOfReferralVolumeDripCall;

  constructor(call: BalanceOfReferralVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BalanceOfReferralVolumeDripCall__Outputs {
  _call: BalanceOfReferralVolumeDripCall;

  constructor(call: BalanceOfReferralVolumeDripCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BalanceOfVolumeDripCall extends ethereum.Call {
  get inputs(): BalanceOfVolumeDripCall__Inputs {
    return new BalanceOfVolumeDripCall__Inputs(this);
  }

  get outputs(): BalanceOfVolumeDripCall__Outputs {
    return new BalanceOfVolumeDripCall__Outputs(this);
  }
}

export class BalanceOfVolumeDripCall__Inputs {
  _call: BalanceOfVolumeDripCall;

  constructor(call: BalanceOfVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BalanceOfVolumeDripCall__Outputs {
  _call: BalanceOfVolumeDripCall;

  constructor(call: BalanceOfVolumeDripCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimBalanceDripCall extends ethereum.Call {
  get inputs(): ClaimBalanceDripCall__Inputs {
    return new ClaimBalanceDripCall__Inputs(this);
  }

  get outputs(): ClaimBalanceDripCall__Outputs {
    return new ClaimBalanceDripCall__Outputs(this);
  }
}

export class ClaimBalanceDripCall__Inputs {
  _call: ClaimBalanceDripCall;

  constructor(call: ClaimBalanceDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ClaimBalanceDripCall__Outputs {
  _call: ClaimBalanceDripCall;

  constructor(call: ClaimBalanceDripCall) {
    this._call = call;
  }
}

export class ClaimReferralVolumeDripCall extends ethereum.Call {
  get inputs(): ClaimReferralVolumeDripCall__Inputs {
    return new ClaimReferralVolumeDripCall__Inputs(this);
  }

  get outputs(): ClaimReferralVolumeDripCall__Outputs {
    return new ClaimReferralVolumeDripCall__Outputs(this);
  }
}

export class ClaimReferralVolumeDripCall__Inputs {
  _call: ClaimReferralVolumeDripCall;

  constructor(call: ClaimReferralVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ClaimReferralVolumeDripCall__Outputs {
  _call: ClaimReferralVolumeDripCall;

  constructor(call: ClaimReferralVolumeDripCall) {
    this._call = call;
  }
}

export class ClaimVolumeDripCall extends ethereum.Call {
  get inputs(): ClaimVolumeDripCall__Inputs {
    return new ClaimVolumeDripCall__Inputs(this);
  }

  get outputs(): ClaimVolumeDripCall__Outputs {
    return new ClaimVolumeDripCall__Outputs(this);
  }
}

export class ClaimVolumeDripCall__Inputs {
  _call: ClaimVolumeDripCall;

  constructor(call: ClaimVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ClaimVolumeDripCall__Outputs {
  _call: ClaimVolumeDripCall;

  constructor(call: ClaimVolumeDripCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RemoveBalanceDripCall extends ethereum.Call {
  get inputs(): RemoveBalanceDripCall__Inputs {
    return new RemoveBalanceDripCall__Inputs(this);
  }

  get outputs(): RemoveBalanceDripCall__Outputs {
    return new RemoveBalanceDripCall__Outputs(this);
  }
}

export class RemoveBalanceDripCall__Inputs {
  _call: RemoveBalanceDripCall;

  constructor(call: RemoveBalanceDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get prevDripToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class RemoveBalanceDripCall__Outputs {
  _call: RemoveBalanceDripCall;

  constructor(call: RemoveBalanceDripCall) {
    this._call = call;
  }
}

export class RemoveReferralVolumeDripCall extends ethereum.Call {
  get inputs(): RemoveReferralVolumeDripCall__Inputs {
    return new RemoveReferralVolumeDripCall__Inputs(this);
  }

  get outputs(): RemoveReferralVolumeDripCall__Outputs {
    return new RemoveReferralVolumeDripCall__Outputs(this);
  }
}

export class RemoveReferralVolumeDripCall__Inputs {
  _call: RemoveReferralVolumeDripCall;

  constructor(call: RemoveReferralVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveReferralVolumeDripCall__Outputs {
  _call: RemoveReferralVolumeDripCall;

  constructor(call: RemoveReferralVolumeDripCall) {
    this._call = call;
  }
}

export class RemoveVolumeDripCall extends ethereum.Call {
  get inputs(): RemoveVolumeDripCall__Inputs {
    return new RemoveVolumeDripCall__Inputs(this);
  }

  get outputs(): RemoveVolumeDripCall__Outputs {
    return new RemoveVolumeDripCall__Outputs(this);
  }
}

export class RemoveVolumeDripCall__Inputs {
  _call: RemoveVolumeDripCall;

  constructor(call: RemoveVolumeDripCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveVolumeDripCall__Outputs {
  _call: RemoveVolumeDripCall;

  constructor(call: RemoveVolumeDripCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBalanceDripRateCall extends ethereum.Call {
  get inputs(): SetBalanceDripRateCall__Inputs {
    return new SetBalanceDripRateCall__Inputs(this);
  }

  get outputs(): SetBalanceDripRateCall__Outputs {
    return new SetBalanceDripRateCall__Outputs(this);
  }
}

export class SetBalanceDripRateCall__Inputs {
  _call: SetBalanceDripRateCall;

  constructor(call: SetBalanceDripRateCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get measure(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dripToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get dripRatePerSecond(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetBalanceDripRateCall__Outputs {
  _call: SetBalanceDripRateCall;

  constructor(call: SetBalanceDripRateCall) {
    this._call = call;
  }
}

export class SetReferralVolumeDripAmountCall extends ethereum.Call {
  get inputs(): SetReferralVolumeDripAmountCall__Inputs {
    return new SetReferralVolumeDripAmountCall__Inputs(this);
  }

  get outputs(): SetReferralVolumeDripAmountCall__Outputs {
    return new SetReferralVolumeDripAmountCall__Outputs(this);
  }
}

export class SetReferralVolumeDripAmountCall__Inputs {
  _call: SetReferralVolumeDripAmountCall;

  constructor(call: SetReferralVolumeDripAmountCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetReferralVolumeDripAmountCall__Outputs {
  _call: SetReferralVolumeDripAmountCall;

  constructor(call: SetReferralVolumeDripAmountCall) {
    this._call = call;
  }
}

export class SetReserveRateMantissaCall extends ethereum.Call {
  get inputs(): SetReserveRateMantissaCall__Inputs {
    return new SetReserveRateMantissaCall__Inputs(this);
  }

  get outputs(): SetReserveRateMantissaCall__Outputs {
    return new SetReserveRateMantissaCall__Outputs(this);
  }
}

export class SetReserveRateMantissaCall__Inputs {
  _call: SetReserveRateMantissaCall;

  constructor(call: SetReserveRateMantissaCall) {
    this._call = call;
  }

  get __reserveRateMantissa(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReserveRateMantissaCall__Outputs {
  _call: SetReserveRateMantissaCall;

  constructor(call: SetReserveRateMantissaCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetVolumeDripAmountCall extends ethereum.Call {
  get inputs(): SetVolumeDripAmountCall__Inputs {
    return new SetVolumeDripAmountCall__Inputs(this);
  }

  get outputs(): SetVolumeDripAmountCall__Outputs {
    return new SetVolumeDripAmountCall__Outputs(this);
  }
}

export class SetVolumeDripAmountCall__Inputs {
  _call: SetVolumeDripAmountCall;

  constructor(call: SetVolumeDripAmountCall) {
    this._call = call;
  }

  get prizeStrategy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dripAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetVolumeDripAmountCall__Outputs {
  _call: SetVolumeDripAmountCall;

  constructor(call: SetVolumeDripAmountCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
