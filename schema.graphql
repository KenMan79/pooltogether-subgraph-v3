type PrizePoolBuilder @entity {
  id: ID!
  trustedForwarder: Bytes!

  prizePoolModuleManagerFactory: Bytes!
  compoundYieldServiceFactory: Bytes!
  periodicPrizePoolFactory: Bytes!
  ticketFactory: Bytes!
  timelockFactory: Bytes!
  sponsorshipFactory: Bytes!

  interestTrackerFactory: Bytes!
  creditFactory: Bytes!

  governorInterface: Bytes!
  rngInterface: Bytes!
}

type SingleRandomWinnerPrizePoolBuilder @entity {
  id: ID!

  prizePoolBuilder: PrizePoolBuilder!
  # prizePoolBuilder: Bytes!
  prizeStrategyFactory: Bytes!
}

type PoolManager @entity {
  id: ID!

  # block: BigInt!

  creator: Bytes!
  prizeStrategy: Bytes!

  yieldService: Bytes!
  ticket: Bytes!
  credit: Bytes!
  sponsorship: Bytes!
  timelock: Bytes!
  prizePool: Bytes!
  interestTracker: Bytes!

  # draws: [Draw!]! @derivedFrom(field: "poolContract")
  # admins: [Admin!]! @derivedFrom(field: "poolContract")
  # players: [Player!]! @derivedFrom(field: "poolContract")

  # drawsCount: BigInt
  # openDrawId: BigInt!
  # committedDrawId: BigInt!
  # poolToken: PoolTokenContract

  # openBalance: BigInt!
  # committedBalance: BigInt!
  # sponsorshipAndFeeBalance: BigInt!
}

type PeriodicPrizePool @entity {
  id: ID!

  prizeStrategy: Bytes!
  governor: Bytes!
  rng: Bytes!

  prizePeriodSeconds: BigInt!
  prizePeriodStartedAt: BigInt!
  previousPrize: BigInt!
  previousPrizeAverageTickets: BigInt!
  feeScaleMantissa: BigInt!
  rngRequestId: BigInt!

  prizePeriodStartedAt: BigInt!
}

type PrizeStrategy @entity {
  id: ID!
}

type YieldService @entity {
  id: ID!
}

type Ticket @entity {
  id: ID!

}

type Credit @entity {
  id: ID!

}

type Sponsorship @entity {
  id: ID!

}

type Timelock @entity {
  id: ID!

}

type InterestTracker @entity {
  id: ID!

}


# type Player @entity {
#   id: ID!
#   address: Bytes!
#   poolContract: PoolContract!
#   balance: BigInt!
# }

# type Sponsor @entity {
#   id: ID! 
#   address: Bytes!
#   poolContract: PoolContract!
#   sponsorshipAndFeeBalance: BigInt!
# }

# type Admin @entity {
#   id: ID!
#   address: Bytes!
#   addedAt: BigInt!
#   poolContract: PoolContract!
# }
