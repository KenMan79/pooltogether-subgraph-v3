enum PeriodicPrizePoolState {
  Opened
  Started
  Awarded
}

type PrizePoolBuilder @entity {
  id: ID!
  trustedForwarder: Bytes!

  prizePoolModuleManagerFactory: Bytes!
  compoundYieldServiceFactory: Bytes!
  periodicPrizePoolFactory: Bytes!
  ticketFactory: Bytes!
  timelockFactory: Bytes!
  sponsorshipFactory: Bytes!

  interestTrackerFactory: Bytes!
  creditFactory: Bytes!

  governor: Bytes!
  rng: Bytes!
}

type SingleRandomWinnerPrizePoolBuilder @entity {
  id: ID!

  prizePoolBuilder: PrizePoolBuilder!
  prizeStrategyFactory: Bytes!
}

type PrizePoolModuleManager @entity {
  id: ID!
  block: BigInt!
  prizePoolBuilder: PrizePoolBuilder!

  creator: Bytes!
  prizeStrategy: Bytes!

  yieldService: Bytes!
  ticket: Bytes!
  credit: Bytes!
  sponsorship: Bytes!
  timelock: Bytes!
  prizePool: Bytes!
  interestTracker: Bytes!

  # draws: [Draw!]! @derivedFrom(field: "poolContract")
  # admins: [Admin!]! @derivedFrom(field: "poolContract")
  # players: [Player!]! @derivedFrom(field: "poolContract")
}

type PeriodicPrizePool @entity {
  id: ID!

  currentState: PeriodicPrizePoolState!
  currentPrizeId: BigInt!

  prizePoolModuleManager: PrizePoolModuleManager!

  prizeStrategy: Bytes!
  rng: Bytes!

  prizePeriodSeconds: BigInt!
  prizePeriodStartedAt: BigInt!

  previousPrize: BigInt
  previousPrizeAverageTickets: BigInt

  feeScaleMantissa: BigInt
  rngRequestId: BigInt

  prizes: [Prize!]! @derivedFrom(field: "prizePool")
}

# ID: `${prizePool.address}-${prizeId}`
type Prize @entity {
  id: ID!
  prizePool: PeriodicPrizePool!

  prize: BigInt
  reserveFee: BigInt
  rngRequestId: BigInt
  randomNumber: Bytes
  rewardStartedOperator: Bytes
  rewardCompletedOperator: Bytes

  winners: [Player!]
}

type InterestTracker @entity {
  id: ID!

  prizePool: PeriodicPrizePool!
  prizePoolModuleManager: PrizePoolModuleManager!
}

type Ticket @entity {
  id: ID!
  
  prizePool: PeriodicPrizePool!
  prizePoolModuleManager: PrizePoolModuleManager!
  
  name: Bytes!
  symbol: Bytes!
  decimals: BigInt!
}

type Sponsorship @entity {
  id: ID!

  prizePool: PeriodicPrizePool!
  prizePoolModuleManager: PrizePoolModuleManager!

  name: Bytes!
  symbol: Bytes!
  decimals: BigInt!
}

type Timelock @entity {
  id: ID!

  prizePool: PeriodicPrizePool!
  prizePoolModuleManager: PrizePoolModuleManager!
}

# ID: `${prizePool.address}-${playerId}`
type Player @entity {
  id: ID!

  address: Bytes!
  prizePool: PeriodicPrizePool!

  balance: BigInt!
}

# type Sponsor @entity {
#   id: ID! 
#   address: Bytes!
#   poolContract: PoolContract!
#   sponsorshipAndFeeBalance: BigInt!
# }

# type Admin @entity {
#   id: ID!
#   address: Bytes!
#   addedAt: BigInt!
#   poolContract: PoolContract!
# }
